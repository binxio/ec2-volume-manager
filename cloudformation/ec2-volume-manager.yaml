---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  LambdaS3Bucket:
    Type: String
    Default: ''
  CFNCustomProviderZipFileName:
    Type: String
    Default: lambdas/ec2-volume-manager-0.2.0.zip

Conditions:
  UsePublicBucket: !Equals
    - !Ref 'LambdaS3Bucket'
    - ''

Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Description: EC2 Volume manager for persistent instances
      FunctionName: ec2-volume-manager
      Code:
        S3Bucket: !If
          - UsePublicBucket
          - !Sub 'binxio-public-${AWS::Region}'
          - !Ref 'LambdaS3Bucket'
        S3Key: !Ref 'CFNCustomProviderZipFileName'
      Handler: ec2_volume_manager.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.9
      Timeout: 600

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: EC2VolumeManager
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVolumes
                  - ec2:DescribeInstances
                  - ec2:AttachVolume
                  - ec2:DetachVolume
                  - tag:GetTagValues
                Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole

  Permission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt Function.Arn
      Principal: events.amazonaws.com

  Sync:
    Type: AWS::Events::Rule
    Properties:
      Description: ec2-volume-manager sync
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
        - Id: ec2-volume-manager
          Arn: !GetAtt Function.Arn

  Trigger:
    Type: AWS::Events::Rule
    Properties:
      State: ENABLED
      EventPattern: |
        {
          "source": [
            "aws.ec2"
          ],
          "detail-type": [
            "EC2 Instance State-change Notification"
          ]
        }
      Targets:
        - Id: ec2-volume-manager
          Arn: !GetAtt Function.Arn

  CFNCustomProviderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Function}
      RetentionInDays: 7
